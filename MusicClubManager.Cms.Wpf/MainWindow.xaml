<Window x:Class="MusicClubManager.Cms.Wpf.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:MusicClubManager.Cms.Wpf"
        xmlns:models="clr-namespace:MusicClubManager.Cms.Wpf.Models"
        xmlns:vms="clr-namespace:MusicClubManager.Cms.Wpf.ViewModels"
        xmlns:uc="clr-namespace:MusicClubManager.Cms.Wpf.UserControls"
        xmlns:views="clr-namespace:MusicClubManager.Cms.Wpf.Views"
        xmlns:c="clr-namespace:MusicClubManager.Cms.Wpf.Converters"
        mc:Ignorable="d"
        d:DataContext="{d:DesignInstance Type=vms:MainViewModel}"
        Title="Music Club Manager" Height="450" Width="800">
    <Window.Resources>
        <DataTemplate DataType="{x:Type vms:CalendarViewModel}">
            <views:HomeView />
        </DataTemplate>

        <DataTemplate DataType="{x:Type vms:AgendaViewModel}" >
            <views:AgendaView />
        </DataTemplate>

        <DataTemplate DataType="{x:Type vms:ArtistsViewModel}">
            <views:ArtistsView />
        </DataTemplate>

        <DataTemplate DataType="{x:Type vms:PerformanceViewModel}">
            <uc:PerformanceUserControl />
        </DataTemplate>

        <c:ITabContentToVisibilityConverter x:Key="ITabContentToVisibilityConverter"/>

        <c:ITabContentToBackgroundConverter x:Key="ITabContentToBackgroundConverter"/>
        <c:ITabContentToForegroundConverter x:Key="ITabContentToForegroundConverter"/>

        <Style TargetType="Button">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="FontWeight" Value="Bold" />
            <Setter Property="Padding" Value="5" />

            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">

                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="TextBox">
            <Setter Property="Padding" Value="5" />
        </Style>

        <Style TargetType="TextBlock">
            <Setter Property="Padding" Value="5" />
        </Style>
    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="auto" />
        </Grid.RowDefinitions>

        <StackPanel Orientation="Horizontal" Grid.Row="0">
            <StackPanel.Style>
                <Style TargetType="StackPanel">
                    <Setter Property="Background" Value="SteelBlue" />
                </Style>
            </StackPanel.Style>

            <Button Content="HOME" Command="{Binding NavigateCommand}" CommandParameter="Calendar" />

            <Button Content="AGENDA" Command="{Binding NavigateCommand}" CommandParameter="Agenda" />

            <Button Content="ARTISTS" Command="{Binding NavigateCommand}" CommandParameter="Artists" />
        </StackPanel>

        <ContentControl Grid.Row="1">
            <ScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto">
                <ContentPresenter Content="{Binding CurrentViewModel, UpdateSourceTrigger=PropertyChanged}" />
            </ScrollViewer>
        </ContentControl>

        <Border BorderThickness="1" BorderBrush="DarkBlue" Grid.Row="2" Margin="5">
            <StackPanel Orientation="Vertical" >
                <ContentControl Visibility="{Binding CurrentTabContent, Converter={StaticResource ITabContentToVisibilityConverter}}" >
                    <Border BorderThickness="1" BorderBrush="DarkBlue">
                        <ScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" >
                            <StackPanel Orientation="Vertical" Background="DarkBlue" >
                                <Button Content="-" Command="{Binding HideCurrentTabContentCommand}" HorizontalAlignment="Right" Foreground="White"/>

                                <ContentPresenter Content="{Binding CurrentTabContent, UpdateSourceTrigger=PropertyChanged}" />
                            </StackPanel>
                        </ScrollViewer>
                    </Border>
                        
                    

                </ContentControl>

                <Border BorderThickness="1 0 1 1" BorderBrush="DarkBlue">
                    <ItemsControl ItemsSource="{Binding Tabs}" Grid.Row="3">
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <WrapPanel Orientation="Horizontal" />
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>

                        <ItemsControl.ItemTemplate>
                            <DataTemplate DataType="{x:Type models:Tab}">
                                <Border BorderThickness="1 0 1 1" BorderBrush="DarkBlue" Margin="5 0 5 5" >
                                    <Border.Background>
                                        <MultiBinding Converter="{StaticResource ITabContentToBackgroundConverter}" >
                                            <Binding RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}" Path="DataContext.CurrentTabContent" UpdateSourceTrigger="PropertyChanged" Mode="TwoWay"/>

                                            <Binding Path="ViewModel" />
                                        </MultiBinding>
                                    </Border.Background>

                                    <StackPanel Orientation="Horizontal">
                                        <Button Content="{Binding Header}" Command="{Binding ShowTabContentCommand}" Padding="5">
                                            <Button.Foreground>
                                                <MultiBinding Converter="{StaticResource ITabContentToForegroundConverter}" >
                                                    <Binding RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}" Path="DataContext.CurrentTabContent" UpdateSourceTrigger="PropertyChanged" Mode="TwoWay"/>

                                                    <Binding Path="ViewModel" />
                                                </MultiBinding>
                                            </Button.Foreground>
                                        </Button>

                                        <Button Command="{Binding CloseTabCommand}" Content="x" Padding="5">
                                            <Button.Foreground>
                                                <MultiBinding Converter="{StaticResource ITabContentToForegroundConverter}" >
                                                    <Binding RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}" Path="DataContext.CurrentTabContent" UpdateSourceTrigger="PropertyChanged" Mode="TwoWay"/>

                                                    <Binding Path="ViewModel" />
                                                </MultiBinding>
                                            </Button.Foreground>
                                        </Button>
                                    </StackPanel>
                                </Border>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                </Border>

            </StackPanel>
        </Border>

              
        
        <!--<TabControl ItemsSource="{Binding Tabs}" Grid.Row="2" TabStripPlacement="Bottom" x:Name="TabControl">
            <TabControl.ItemTemplate>
                <DataTemplate DataType="models:Tab">
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="{Binding Header}" Padding="0"/>

                        <Button Command="{Binding CloseTabCommand}" Content="x" Padding="0"/>
                    </StackPanel>
                </DataTemplate>
            </TabControl.ItemTemplate>

            <TabControl.ContentTemplate>
                <DataTemplate DataType="models:Tab">
                    <ScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto">
                        <StackPanel>
                            <Button Content="-" HorizontalAlignment="Right" Click="Button_Click"/>

                            <ContentPresenter Content="{Binding ViewModel, UpdateSourceTrigger=PropertyChanged}" />
                        </StackPanel>
                    </ScrollViewer>
                </DataTemplate>
            </TabControl.ContentTemplate>
        </TabControl>-->
    </Grid>
</Window>
