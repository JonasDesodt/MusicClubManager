@page "/lineups/{lineupId:int}/create-artist"

@inject IArtistService ArtistApiService
@inject NavigationManager NavigationManager

<h3>Create artist</h3>

<EditForm Model="_model" OnValidSubmit="() => Submit(_model)">
    <DataAnnotationsValidator></DataAnnotationsValidator>

    <ValidationSummary></ValidationSummary>

    <div>
        <div>
            <label for="name">Name</label>

            <InputText @bind-Value="_model.Name" id="name" />
        </div>

        <div>
            <label for="description">Description</label>

            <InputTextArea @bind-Value="_model.Description" id="description" />
        </div>
    </div>

    <ul>
        <li><button type="submit">Create</button></li>

        <li><button type="reset">Reset</button></li>
    </ul>
</EditForm>

@code {
    [Parameter]
    public int LineupId { get; set; }

    private CreateArtistFormModel _model = new();

    private async Task Submit(CreateArtistFormModel _model)
    {
        if (string.IsNullOrWhiteSpace(_model.Name))
        {
            return;
        }

        var request = new ArtistRequest
            {
                Name = _model.Name,
                Description = _model.Description,
                Image = _model.Image
            };

        if ((await ArtistApiService.Create(request)).Data is not { } artistResult)
        {
            return;
        }

        NavigationManager.NavigateTo($"lineups/{LineupId}/{artistResult.Id}/add-performance");
    }
}
