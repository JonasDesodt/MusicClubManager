@page "/lineups/{lineupId:int}/{artistId:int}/edit-artist"

@layout LineupLayout

@inject ILineupService LineupApiService
@inject NavigationManager NavigationManager

<SubTitle ReturnTitle="Artists" ReturnUrl="@($"lineups/{LineupId}/performances/select-artist")">
    Edit artist
</SubTitle>

<ArtistEditForm ArtistId="ArtistId" OnSubmitted="@(() => NavigationManager.NavigateTo($"lineups/{LineupId}/select-artist"))" />

@code {
    [Parameter]
    public int ArtistId { get; set; }

    [Parameter]
    public int? LineupId { get; set; }
    private ServiceResult<LineupResult>? _lineupServiceResult;

    protected override async Task OnParametersSetAsync()
    {
        await FetchLineup(LineupId);

        await base.OnParametersSetAsync();
    }

    private async Task FetchLineup(int? id)
    {
        if (id is null || id <= 0)
        {
            return;
        }

        _lineupServiceResult = await LineupApiService.Get((int)id, new PaginationRequest { Page = 1, PageSize = 5 });
    }
}