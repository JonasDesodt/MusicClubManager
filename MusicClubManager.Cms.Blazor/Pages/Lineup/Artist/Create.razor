@page "/lineups/{lineupId:int}/performances/create-artist"

@layout LineupLayout

@inject ILineupService LineupApiService
@inject NavigationManager NavigationManager

<h3>Create artist</h3>

@if (_lineupServiceResult?.Data is { } lineupResult)
{
    <p>Lineup: @lineupResult.Doors.ToLongDateString() @lineupResult.Name</p>

    <p>Show all affected lineups / performances</p>
}

<ArtistCreateForm OnSubmitted="@((artistId) => NavigationManager.NavigateTo($" lineups /{LineupId}/{artistId}/add-performance"))" />

@code {
    [Parameter]
    public int LineupId { get; set; }
    private ServiceResult<LineupResult>? _lineupServiceResult;

    protected override async Task OnParametersSetAsync()
    {
        await FetchLineup(LineupId);

        await base.OnParametersSetAsync();
    }

    private async Task FetchLineup(int? id)
    {
        if (id is null || id <= 0)
        {
            return;
        }

        _lineupServiceResult = await LineupApiService.Get((int)id, new PaginationRequest { Page = 1, PageSize = 5 });
    }
}
