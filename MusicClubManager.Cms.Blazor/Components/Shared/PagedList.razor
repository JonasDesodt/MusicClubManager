@typeparam TEntity

@if (PagedServiceResult?.Data is { } results)
{
    <ul>
        @foreach (var result in results)
        {
            <li>
                @ItemTemplate(result)
            </li>
        }
    </ul>

    <PaginationBig Context="new Pagination { Page = (int)PagedServiceResult.Page, PageSize = (int)PagedServiceResult.PageSize, TotalCount = (int)PagedServiceResult.TotalCount }"
                   OnPageChanged="(context) => OnPageChanged.InvokeAsync(context)" />

}

@code {
    [Parameter, EditorRequired]
    public RenderFragment<TEntity> ItemTemplate { get; set; } = default!;

    [Parameter, EditorRequired]
    public PagedServiceResult<IList<TEntity>>? PagedServiceResult { get; set; }

    [Parameter, EditorRequired]
    public EventCallback<Pagination> OnPageChanged { get; set; }
}
