@inject NavigationManager NavigationManager

<nav>
    <div>
        <h2>Main menu</h2>
    </div>

    <ul>
        <li>
            @if (_route.Equals(""))
            {
                <a href="/" @onclick="()=> OnNavigationStarted.InvokeAsync()" class="active">Home</a>
            }
            else
            {
                <a href="/" @onclick="()=> OnNavigationStarted.InvokeAsync()">Home</a>
            }

        </li>

        <li>
            @if (_route.StartsWith("lineups"))
            {
                <a href="lineups" @onclick="()=> OnNavigationStarted.InvokeAsync()" class="active">Lineups</a>
            }
            else
            {
                <a href="lineups" @onclick="()=> OnNavigationStarted.InvokeAsync()">Lineups</a>
            }
        </li>

        <li>
            @if (_route.StartsWith("artists"))
            {
                <a href="artists" @onclick="()=> OnNavigationStarted.InvokeAsync()" class="active">Artists</a>

            }
            else
            {
                <a href="artists" @onclick="()=> OnNavigationStarted.InvokeAsync()">Artists</a>
            }
        </li>

        <li>
            @if (_route.StartsWith("images"))
            {
                <a href="images" @onclick="()=> OnNavigationStarted.InvokeAsync()" class="active">Images</a>

            }
            else
            {
                <a href="images" @onclick="()=> OnNavigationStarted.InvokeAsync()">Images</a>
            }
        </li>
    </ul>
</nav>

@code {
    [Parameter]
    public EventCallback OnNavigationStarted { get; set; }

    private string _route = "";

    protected override void OnParametersSet()
    {
        _route = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);

        base.OnParametersSet();
    }
}